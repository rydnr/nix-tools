{{
  description = "A Nix flake for {package_name} {package_version} Python package";

  inputs = {{
    nixpkgs.url = "github:NixOS/nixpkgs/nixos-22.11";
    flake-utils = {{
      url = "github:numtide/flake-utils";
    }};
    poetry2nix = {{
      url = "github:nix-community/poetry2nix";
      inputs.nixpkgs.follows = "nixpkgs";
    }};
    {flake_dependencies_declaration}
  }};

  outputs = inputs:
    with inputs;
    flake-utils.lib.eachDefaultSystem (system:
      let
        pkgs = nixpkgs.legacyPackages.${{system}};
        python = pkgs.python3;
        pythonPackages = python.pkgs;
      in rec {{
        packages = {{
          {package_name}-{package_version_with_underscores} = (import ./{package_name}-{package_version}.nix) {{
            python = python;
            pkgs = pkgs;
            inherit (pkgs) lib poetry fetchgit;
            inherit (poetry2nix.legacyPackages.${{system}}) mkPoetryApplication;
            {not_flake_dependencies_with_newlines}
            {flake_dependencies_with_newlines}
          }};
          {package_name} = packages.{package_name}-{package_version_with_underscores};
          default = packages.{package_name};
          meta = with lib; {{
            description = ''
{package_description}
'';
            license = licenses.{package_license};
            homepage = "{github_url}";
            maintainers = with maintainers; [ ];
          }};
        }};
        defaultPackage = packages.default;
        devShell = pkgs.mkShell {{
          buildInputs = with pkgs.python3Packages; [ packages.default ];
        }};
        shell = flake-utils.lib.mkShell {{
          packages = system: [ self.packages.${{system}}.default ];
        }};
      }});
}}
