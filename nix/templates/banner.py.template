# Generated by the banner.py.template template from [https://github.com/rydnr/python-nix-flake-generator/nix/templates/banner.py.template]. Changes will be overwritten.
"""
@file_path@

This file defines the @banner_class@ class of @project_name@.

Copyright (C) 2024-today rydnr's @org@/@repo@

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
"""
from pythoneda.shared.banner import Banner
import sys
from typing import List

class @banner_class@(Banner):
    """
    Prints the @project_name@ banner in ASCII art.

    Class name: @banner_class@

    Responsibilities:
        - Print the @project_name@ banner in ASCII art.

    Collaborators:
        - None
    """

    def __init__(self):
        """
        Initializes the instance.
        """
        super().__init__(
            "@org@",
            "@repo@",
            "@tag@",
            "@pescio_space@",
            "@arch_role@",
            "@hexagonal_layer@",
            "@python_version@",
            "@nixpkgs_release@",
            len(sys.path),
            sum(1 for path in sys.path if "pythoneda" in path))

    def build(self) -> List[str]:
        """
        Builds the project banner.
        :return: The banner text.
        :rtype: List[str]
        """
        line1_first_half, line1_second_half = self.center(self.org, 24)
        line2_first_half, line2_second_half = self.center(self.repo, 39)
        result = []

        result.append(f"\033[37mGPLv3        \033[35m{self._pythoneda_dep_count:>3}\033[36m___________\033[36m{self._dep_count}             \033[0m      \033[34m       _____         \033[0m     \033[33m_____________      ______       \033[0m      \033[35m       \033[37m(c) 2024-today acm-sl.com       \033[35m_____              \033[0m")
        result.append(f"\033[36m_____________  ___  /___  /______________ \033[0m      \033[34m__________(_)___  __ \033[0m     \033[33m___  __/__  /_____ ___  /______ \033[0m      \033[35m_______ ______________________________ __  /______________\033[0m")
        result.append(f"\033[36m___  __ \\_  / / /  __/_  __ \\  __ \\_  __ \\\033[31m_______\033[34m_  __ \\_  /__  |/_/\033[31m_______\033[33m_  /_ __  /_  __ `/_  //_/  _ \\\033[31m_______\033[35m_  __ `/  _ \\_  __ \\  _ \\_  ___/  __ `/  __/  __ \\_  ___/\033[0m")
        result.append(f"\033[36m__  /_/ /  /_/ // /_ _  / / / /_/ /  / / /\033[31m/_____/\033[34m  / / /  / __>  < \033[31m_/_____/\033[33m  __/ _  / / /_/ /_  ,<  /  __/\033[31m/_____/\033[35m  /_/ //  __/  / / /  __/  /   / /_/ // /_ / /_/ /  /   \033[0m \033[0m")
        result.append(f"\033[36m_  .___/_\\__, / \\__/ /_/ /_/\\____//_/ /_/ \033[34m{self.org.upper()}\033[34m /_/ /_//_/  /_/|_| \033[0m      \033[33m /_/    /_/  \\__,_/ /_/|_| \\___/ \033[0m      \033[35m_\\__, / \\___//_/ /_/\\___//_/    \\__,_/ \\__/ \\____//_/    \033[0m")
        result.append(f"\033[36m/_/     /____/            {' '*line2_first_half}\033[33m{self.repo.upper()}{' '*line2_second_half}\033[0m                                                \033[35m/____/\033[0m")
        result.append(f" \033[36mhttps://pythoneda.github.io\033[0m \033[34mhttps://github.com/{self.org}/{self.repo}/tree/{self.tag}\033[0m")
        result.append(f" \033[33mhttps://github.com/{self.org}\033[0m  \033[35mhttps://github.com/nixos/nixpkgs/tree/{self.nixpkgs_release}\033[0m \033[37mhttps://patreon.com/rydnr\033[0m")
        result.append("")
        result.append(f" Thank you for using \033[31m{self.org}/{self.repo} {self.tag}\033[0m and for your appreciation of free software.")
        result.append("")
        return result

if __name__ == "__main__":
    @banner_class@().print()
